group 'com.bigdata'

apply plugin: 'scala'
apply plugin: 'maven-publish'
apply plugin: 'distribution'

sourceCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral
    }

    dependencies {
        classpath "org.github.ngbinh.scalastyle:gradle-scalastyle-plugin_2.11:1.0.1"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath "net.researchgate:gradle-release:2.7.0"
    }
}

repositories {
    mavenCentral
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    spark {
        extendsFrom runtime

        exclude group: 'org.scala-lang'
        exclude group: 'org.scala-lang.modules'
        exclude module: 'spark-core_2.11'
        exclude module: 'spark-streaming_2.11'
        exclude module: 'spark-sql_2.11'
    }
}


dependencies {

    compile fileTree("libs") {
        include '*.jar'
    }

    compile(group: 'org.scala-lang', name: 'scala-library', version: '2.11.12')
    compile(group: 'org.scala-lang', name: 'scala-reflect', version: '2.11.12')
    compile(group: 'org.scala-lang', name: 'scala-compiler', version: '2.11.12')
    compile(group: 'org.scala-lang.modules', name: 'scala-xml_2.11', version: "1.1.1")
    compile(group: 'com.typesafe', name: 'config', version: '1.3.3')

    compile(group: 'com.beachape', name: 'enumeratum_2.11', version: '1.5.13')
    compile(group: 'org.typelevel', name: 'cats-core_2.11', version: '1.6.0')
    compile(group: 'org.apache.avro', name: 'avro', version: '1.8.2')
    compile(group: 'org.json4s', name: 'json4s-jackson_2.11', version: '3.2.10')

    compile(group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25')
    compile(group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.2')
    compile(group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2')

    compile(group: 'org.apache.spark', name: 'spark-streaming_2.11', version: '2.3.0')
    compile(group: 'org.apache.spark', name: 'spark-streaming-kafka-0-10_2.11', version: '2.3.0')
    compile(group: 'org.apache.kafka', name: 'kafka-clients', version: '1.0.0')

    compile(group: 'org.apache.spark', name: 'spark-sql-kafka-0-10_2.11', version: '2.3.0')
    compile(group: 'org.apache.spark', name: 'spark-sql_2.11', version: '2.3.0')
}

task(sparkJar, type: Jar) {
    classifier = 'spark'

    manifest {
        attributes (
        'Main-Class': 'com.mts.bigdata.testing.afosp.RunJob',
        )
    }
    
    from { configurations.spark.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

configurations {
    assembly
    compile.extendsFrom assembly
}

configurations {
    provided
    compile.extendsFrom provided
}

distributions {
    main {
        baseName = project.name
        contents {
            into('') {
                from sparkJar.outputs.files
            }
        }
    }
}
